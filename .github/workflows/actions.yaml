name: Build and deploy action
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: tsorokoletova/diplom_skypro:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push tsorokoletova/diplom_skypro:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
     runs-on: ubuntu-latest
     needs: build
     env:
       ANSIBLE_VAULT_PASSWORD_FILE: /tmp/.vault_pass.txt
     steps:
     - name: checkout
       uses: actions/checkout@v2
     - name: render template
       run: |
         echo "${{ secrets.VAULT_PASSWORD }}" > /tmp/.vault_pass.txt
         ansible-vault decrypt ./deploy/.env-ci 
         ansible-vault decrypt ./deploy/nginx/default.conf
         mv deploy/.env-ci deploy/.env
         cat deploy/docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml

     - name: copy files to server
       uses: appleboy/scp-action@master
       with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USERNAME }}
           password: ${{ secrets.PASSWORD }}
#           port: ${{ secrets.PORT }}
           source: "deploy/*"
           target: diplom
           strip_components: 1

     - name: run compose
       uses: appleboy/ssh-action@master
       with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USERNAME }}
           password: ${{ secrets.PASSWORD }}
           script: |
             cd diplom
             docker compose up -d

     - name: clear after deploy
       if: always()
       uses: appleboy/ssh-action@master
       with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSWORD }}
            script: |
               docker system prune -a -f