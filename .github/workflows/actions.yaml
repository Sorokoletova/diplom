name: Build and deploy action
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{secrets.DOCKER_HUB_USERNAME}}
#          password: ${{secrets.DOCKER_HUB_TOKEN}}
#      - name: Build and push
#        uses: docker/Build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile
#          builder: ${{steps.buildx.outputs.name}}
#          push: true
#          tags: ${{secrets.DOCKER_HUB_USERNAME}}/
#          username: ${{secrets.DOCKER_HUB_USERNAME}}
#          password: ${{secrets.DOCKER_HUB_TOKEN}}
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t tsorokoletova/diplom_skypro:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push tsorokoletova/diplom_skypro:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
     runs-on: ubuntu-latest
     steps:
     - name: clone code
       uses: actions/checkout@v2
     - name: render configs
       run: |
         mkdir deploy
         cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
         cat .env-ci.py | envsubst > deploy/.env.py
     - name: copy files to server
       uses: appleboy/scp-action@master
       with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USERNAME }}
           password: ${{ secrets.PASSWORD }}
           port: ${{ secrets.PORT }}
           source: "deploy/docker-compose.yaml,deploy/.env.py"
           target: "diplom-ci"
           strip_components: 1



#  deploy:
#    needs: build_and_push
#    runs-on: ubuntu-latest
#    env:
#      DB_PASSWORD: ${{ secrets.PASSWORD_DB }}
#      DB_USER: ${{ secrets.USER_DB }}
#      DB_NAME: ${{ secrets.NAME_DB }}
#    steps:
#      - name: clone
#        uses: actions/checkout@v2
#      - name: render configs
#        run: |
#          mkdir deploy
#          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
##          cat config-ci.py | envsubst > deploy/config.py
#      - name: copy files
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          source: "deploy/docker-compose.yaml"
#          target: "flask-app-ci"
#          strip_components: 1
#      - name: run
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          script: |
#            cd diplom
#            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
#
